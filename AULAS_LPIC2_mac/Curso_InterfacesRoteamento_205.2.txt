Configuração e resolução de problemas rede

  Ambiente 
	comp1 - 192.168.1.111
	comp2 - 192.168.1.21 e 172.32.16.210
	comp3 - 172.32.16.220
o comp1 deve poder comunicar com o comp3


No comp1 - nao faz nada

no comp2
	ifconfig enp0s2 172.32.16.210 configurar ip
	manter o ip 192.168.1.21

no comp3 
	ip address show   listar ips
	ip addr flush dev enp0s3  limpa ip atual

	ip address add 172.32.16.220/24 dev enp0s3  setar novo ip
	ip address show
	

no Comp1 
	route add -net 172.32.16.0/24 192.168.1.21
	route -n

no comp3
	route add -net 192.168.1.0/24 172.32.16.210
	ip route show

no comp2 - hbilitar o forward de pacotes (configurar o kernel) funcionar como router

	cat /proc/sys/net/ipv4/ip-forward
	
	echo 1 > /proc/sys/net/ipv4/ip-forward  ou 
	sysctl -w net.ipv4.ip_forward=1   (muda parametros no kernel)


Agora o ping funciona de ponta a ponta
   Testes
	
	do comp1 - traceroute 172.32.16.220	
		traceroute - I força usar pacotes icmp, pois padraõ é udp

	ttl - timeTOLive  tempo de resposta



No route -n Existe as 

  flags no route -n
	G - usada como gateway
	U - rota ativa
	H - alvo e um host
	D - dinamica alterada por deamon ou redirecionamento
	M - modificada por roteamento de deamon

  Metric
	motra a regra de forma prioritária, posicionar as rotas semelhantes
	menor o numero maior a prioridade


	Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
	0.0.0.0         192.168.15.1    0.0.0.0         UG    600    0        0 wlp1s0
	192.168.15.0    0.0.0.0         255.255.255.0   U     600    0        0 wlp1s0
	192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0

	



netstat, ss lsof, netcat

  netcat ou nc -  testar conexao de ma porta
     telnet 192.168.1.210 80
  netcat 192.168.1.210 80  ou nc 192.168.1.210
  nc -vz 192.168.1.210 50-100   (v-verbose z-testa se a posta esta ativa)

  pode abrir uma porta
   nc -l -p 1234  (abriu a posta 1234)
   
   de outra maquina nc 192.168.1.210 1234 (se digitar um texto, a msg aparece na outra)
   
netstat   mostra as conexoes abertas
 -tul  tcp e udp em listenning
 -n  não traduz os nomes
 -tuln  tudo que esta em listenning tcp e udp

  netstat -l --inet  mesmo informaçao (pega tudo que é tcp
  netstat -ln -A inet
  netstat -r  tabela de roteamento mesmo que o route
  netstat -i estatistica por interface
  netstat -lnp --inet  o -p posta o processo que abriu cada porta
  netstat -c fica atualizando
  netstat -a mostra todos os sockets


 ss - e um novo netstat
	ss -a todos os sockets
	ss -lntu listenning nao nao traduz tcp udp
	ss -p mostra processos quem abriu os processo

 netstat se nao colocar o -l ele mostra as conexoes estabelecidas



lsof ver as conexoes aberta com -i
   lsof -i mostra as conexoes de rede em aberto
   lsof -i tcp ou udp  (tu
   lsof -i :22
   lsof -i @192.168.1.168:22


ip neigh show (mesmo que arp -n)


tcpdump (ler tudo que passa nas interfaces de rede)
  yum install tcpdump
  interface rede deve aceitar o modo promiscuous(ler tudo que esteja passando)

  tcpdump sem parametro mostra tudo sem filtro
  tcpdump -n sem traduzir
  tcpdump -n icmp -c10 (so le icmp e so pega 10 pacotes)
  tcpdump -n icmp -c10 -i enp0s8 somente da placa 
  tcpdump -n icmp -c10 -w arq.pcap  gera arq
    tcpdump -r arq.pcap  para ler

  tcpdump -n host www.lpi.org  filtra so o trafego que vem do host indicado
  tcpdump -n src host www.lpi.org mostra so o que a origem for o nome do host
  tcpdump -n dst host www.lpi.org
  tcpdump -n dst port 80   tudo que o destino seja porta 80

  tcpdump -n net 172.32.16.0/24   tudo que for para essa rede
  tcpdump -n src portrange 80-100
  tcpdump -n host 192.168.1.220 (tudo que seja para o meu desktop)  
  tcpdump -n host 192.168.1.220 and port 22 (tudo que seja para o meu desktop na porta 22)
	pode usr or tb  ou o and not port 22
	and not port 22 and '! port 80' 

   tcpdump -n -vvv host 192.168.1.220 and port 22  (-vvv nivel de informacao pode ser v ou vv tb)
   tcpdump -n -q host 192.168.1.220 and port 22 (-q forma mais sucinta)



nmap - faz scan de portas
  yum install nmap
  
  nmap 192.168.1.210  (procura portas abertas)
  nmap 192.168.1.0/24   escaneia toda a rede
  nmap 192.168.1.210 -f  ele escaneia mais rapido, so uma s 100 postas

  nmap 192.168.1.210 -o  ver as portas e mostra o SO usado
	tcp stack fingerprint para supor o SO conforme caracteristcas
  nmap 192.168.1.210 -sV pega as versao do APP de cada porta

  nmap 192.168.1.210 -p22-100  fazer somente na porta 22 a 100 ou 22,80 portas 22 e 80



EXERCICIOS

1. Se possível, identifique o primeiro IP Público/Internet pelo qual um pacote passa quando seu host faz algum acesso à Internet.

	A ferramenta a ser usada será o traceroute. Através dele você verá normalmente, principalmente no caso de uma conexão doméstica, o seu roteador/gateway como primeiro “hop” alcançado, e em seguida um IP da Internet;
	Em uma rede corporativa isso pode ser diferente;
	Em alguns casos, sua rede pode impedir o trafego desses pacotes;
	Exemplo:
	# traceroute -n www.lpi.org
	traceroute to www.lpi.org (65.39.134.165), 30 hops max, 60 byte packets
	1 192.168.1.1 2.811 ms 2.785 ms 2.772 ms
	2 201.77.113.246 9.162 ms 9.167 ms 9.157 ms ←Primeiro IP Público
	3 * * *
	4 201.77.113.233 9.084 ms 9.054 ms 9.048 ms
	5 201.77.113.169 11.390 ms 11.355 ms 11.884 ms
	6 200.186.12.121 12.588 ms 10.737 ms 11.574 ms
	7 67.17.99.233 117.093 ms 67.17.94.249 116.138 ms 67.17.99.233 116.118 ms

	  nmap 192.168.1.210



2. Identifique todas as conexões TCP ativas no momento em seu sistema, incluindo o PID responsável por cada conexão. Conexões em estado Listen não devem ser exibidas.

	# netstat -ntp
	# ss -ntp
	# lsof -i tcp|grep -v LISTEN


3. Utilize o tcpdump para criar um arquivo chamado analise.pcap que contenha 100 pacotes que tenham trafegado pelas suas interfaces de rede, excluindo-se os pacotes das portas 80 e 443.


	# tcpdump -n not port 80 and not port 443 -c 100 -w analise.pcap

4. Verifique o status das portas 20, 21, 22, 23, 80 e 443 em todas as máquinas da sua rede local.

	# nmap 192.168.1.0/24 -p20-23,80,443

